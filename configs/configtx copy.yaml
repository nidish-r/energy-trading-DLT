# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   ORGANIZATIONS
#
#   This section defines the organizational identities that can be referenced
#   in the configuration profiles.
#
################################################################################
Organizations:

    - &Org1
      Name: Org1MSP
      ID: Org1MSP
      MSPDir: ../organizations/fabric-ca/org1/msp
      Policies:
          Readers:
              Type: Signature
              Rule: "OR('Org1MSP.member')"
          Writers:
              Type: Signature
              Rule: "OR('Org1MSP.member')"
          Admins:
              Type: Signature
              Rule: "OR('Org1MSP.admin')"
      AnchorPeers:
          - Host: peer0.org1.example.com
            Port: 7061

    - &Org1Orderer
        Name: Org1OrdererMSP
        ID: Org1MSP
        MSPDir: ../organizations/fabric-ca/org1/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.member')"
        OrdererEndpoints:
            - "orderers-orderer1-1:7050"
            - "orderers-orderer2-1:7051"
            - "orderers-orderer3-1:7052"

    - &Org2
      Name: Org2MSP
      ID: Org2MSP
      MSPDir: ../organizations/fabric-ca/org2/msp
      Policies:
          Readers:
              Type: Signature
              Rule: "OR('Org2MSP.member')"
          Writers:
              Type: Signature
              Rule: "OR('Org2MSP.member')"
          Admins:
              Type: Signature
              Rule: "OR('Org2MSP.admin')"
      AnchorPeers:
          - Host: peer1.org2.example.com
            Port: 8061

################################################################################
#
#   CAPABILITIES
#
#   This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V2.0 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v2.0.0
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # orderers and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on a channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2.0 for Application enables the new non-backwards compatible
        # features and fixes of fabric v2.0.
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on a channel are at v2.0.0 or later.
        V2_0: true

################################################################################
#
#   APPLICATION
#
#   This section defines the values to encode into a config transaction or
#   genesis block for application-related parameters.
#
################################################################################
Application: &ApplicationDefaults
    # ACLs for system chaincode functions and other resources
    ACLs: &ACLsDefault
        # Lifecycle System Chaincode (_lifecycle) ACLs
        _lifecycle/CheckCommitReadiness: /Channel/Application/Writers
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Writers
        _lifecycle/QueryChaincodeDefinitions: /Channel/Application/Writers

        # Legacy Lifecycle System Chaincode (lscc) ACLs
        lscc/ChaincodeExists: /Channel/Application/Readers
        lscc/GetDeploymentSpec: /Channel/Application/Readers
        lscc/GetChaincodeData: /Channel/Application/Readers
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        # Query System Chaincode (qscc) ACLs
        qscc/GetChainInfo: /Channel/Application/Readers
        qscc/GetBlockByNumber: /Channel/Application/Readers
        qscc/GetBlockByHash: /Channel/Application/Readers
        qscc/GetTransactionByID: /Channel/Application/Readers
        qscc/GetBlockByTxID: /Channel/Application/Readers

        # Configuration System Chaincode (cscc) ACLs
        cscc/GetConfigBlock: /Channel/Application/Readers
        cscc/GetChannelConfig: /Channel/Application/Readers

        # Miscellaneous peer functions ACLs
        peer/Propose: /Channel/Application/Writers
        peer/ChaincodeToChaincode: /Channel/Application/Writers

        # Event ACLs
        event/Block: /Channel/Application/Readers
        event/FilteredBlock: /Channel/Application/Readers

    # Organizations participating in the application network
    Organizations:
        - *Org1
        - *Org2

    # Default policies for application level
    Policies: &ApplicationDefaultPolicies
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Application level capabilities
    Capabilities:
        <<: *ApplicationCapabilities

################################################################################
#
#   ORDERER
#
#   This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters.
#
################################################################################
Orderer: &OrdererDefaults
    # Orderer Type: etcdraft
    OrdererType: etcdraft

    # Addresses of the orderers
    Addresses:
        - orderers-orderer1-1:7050
        - orderers-orderer2-1:7051
        - orderers-orderer3-1:7052


    # Batch Timeout and Batch Size settings
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 98 MB
        PreferredMaxBytes: 512 KB

    # EtcdRaft Configuration
    EtcdRaft:
        Consenters:
            - Host: orderers-orderer1-1
              Port: 7050
              ClientTLSCert: ../organizations/fabric-ca/org1/orderers/orderer1.example.com/tls/signcerts/fullchain.pem
              ServerTLSCert: ../organizations/fabric-ca/org1/orderers/orderer1.example.com/tls/signcerts/fullchain.pem
            - Host: orderers-orderer2-1
              Port: 7051
              ClientTLSCert: ../organizations/fabric-ca/org1/orderers/orderer2.example.com/tls/signcerts/fullchain.pem
              ServerTLSCert: ../organizations/fabric-ca/org1/orderers/orderer2.example.com/tls/signcerts/fullchain.pem
            - Host: orderers-orderer3-1
              Port: 7052
              ClientTLSCert: ../organizations/fabric-ca/org1/orderers/orderer3.example.com/tls/signcerts/fullchain.pem
              ServerTLSCert: ../organizations/fabric-ca/org1/orderers/orderer3.example.com/tls/signcerts/fullchain.pem

    # Organizations participating on the orderer side
    Organizations:
        - *Org1

    # Policies for the orderer
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

    # Capabilities for the orderer
    Capabilities:
        <<: *OrdererCapabilities

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"


    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   PROFILES
#
#   Different configuration profiles may be encoded here to be specified as
#   parameters to the configtxgen tool. The profiles which specify consortiums
#   are to be used for generating the orderer genesis block. With the correct
#   consortium members defined in the orderer genesis block, channel creation
#   requests may be generated with only the org member names and a consortium
#   name.
#
################################################################################
Profiles:

    # Genesis profile for the Orderer system channel
    Org1OrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *Org1Orderer  # Reference to Org1 as an orderer organization
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            Org1Consortium:
                Organizations:
                    - *Org1

    
    # Channel profile for Org1
    Org1AppChannelEtcdRaft:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            Organizations:
                - *Org1Orderer  # Reference to Org1 as an orderer organization
            # Orderer Policies can be defined here if necessary
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1  # Reference to your Org1 definition
            # Application Policies can be defined here if necessary